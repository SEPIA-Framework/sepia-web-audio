//'SepiaVoiceRecorder' plugin for SEPIA Web Audio Lib v0.9.11 min - https://github.com/SEPIA-Framework/sepia-web-audio
(function(){function a(a){a.output&&a.output.wav?h.onWaveEncoderAudioData(a.output.wav):a.output&&a.output.buffer,a.gate&&(h.onWaveEncoderStateChange(a.gate),!0===a.gate.isOpen?i=!0:!1===a.gate.isOpen&&(i&&f(),i=!1))}function b(a){a.voiceActivity!=null,a.voiceEnergy!=null,a.vadSequenceCode!=null&&(1==a.vadSequenceCode?h.onVadStateChange("vaup",1):2==a.vadSequenceCode?h.onVadStateChange("speechstart",2):3==a.vadSequenceCode?h.onVadStateChange("vadown",3):4==a.vadSequenceCode?h.onVadStateChange("speechend",4):5==a.vadSequenceCode&&h.onVadStateChange("speechend",5))}function c(a){a&&(a.gate&&(!1==a.gate.isOpen&&k?(k=!1,h.onSpeechRecognitionStateChange({state:"onStreamEnd",bufferOrTimeLimit:a.gate.bufferOrTimeLimit})):!0==a.gate.isOpen&&!k&&(h.onSpeechRecognitionStateChange({state:"onStreamStart"}),k=!0)),a.recognitionEvent&&h.onSpeechRecognitionEvent(a.recognitionEvent),a.connectionEvent&&("ready"==a.connectionEvent.type?h.onConnected(a.connectionEvent.data):"closed"==a.connectionEvent.type&&h.onDisconnected(a.connectionEvent.data)),a.output&&a.output.wav&&h.onWaveEncoderAudioData(a.output.wav))}async function d(d){d?(d.targetSampleRate&&(l=d.targetSampleRate),d.resamplerBufferSize&&(m=d.resamplerBufferSize)):d={};var e=!!d.asr;"object"!=typeof d.asr&&(d.asr={});var f=!!d.vad;"object"!=typeof d.vad&&(d.vad={});var g;if(d.fileUrl)try{g=await SepiaFW.webAudio.createFileSource(d.fileUrl,{targetSampleRate:l})}catch(a){return void h.onProcessorInitError(a)}var i,k,n,o,p={name:"speex-resample-switch",settings:{onmessage:h.onResamplerData,sendToModules:[],options:{processorOptions:{targetSampleRate:l,resampleQuality:d.resampleQuality||4,bufferSize:m,passThroughMode:0,calculateRmsVolume:!0,gain:d.gain||1}}}},q={name:"wave-encoder",type:"worker",handle:{},settings:{onmessage:a,options:{setup:{inputSampleRate:l,inputSampleSize:m,lookbackBufferMs:0,recordBufferLimitKb:500,recordBufferLimitMs:d.recordingLimitMs,doDebug:!1}}}},r={name:"webrtc-vad-worker",type:"worker",settings:{onmessage:b,options:{setup:{inputSampleRate:l,inputSampleSize:m,bufferSize:d.vad.bufferSize||960,vadMode:d.vad.mode||3,sequence:{silenceActivationTime:450,maxSequenceTime:d.vad.maxSequenceTime||1e4,minSequenceTime:d.vad.minSequenceTime||600}}}}},s={name:"stt-socket",type:"worker",handle:{},settings:{onmessage:c,options:{setup:{inputSampleRate:l,inputSampleSize:m,lookbackBufferMs:0,recordBufferLimitKb:500,recordBufferLimitMs:d.recordingLimitMs,serverUrl:d.asr.serverUrl,clientId:d.asr.clientId,accessToken:d.asr.accessToken,messageFormat:d.asr.messageFormat||"webSpeechApi",language:d.asr.language||"",task:d.asr.task||"",model:d.asr.model||"",continuous:d.asr.continuous!=null&&d.asr.continuous,optimizeFinalResult:d.asr.optimizeFinalResult,engineOptions:d.asr.engineOptions||{},returnAudioFile:d.asr.returnAudioFile||!1,doDebug:!1}}}},t=[];t.push(p),i=t.length,f&&(t.push(r),n=t.length,h.vadModule=r,p.settings.sendToModules.push(n)),e?(t.push(s),o=t.length,h.sttServerModule=s,p.settings.sendToModules.push(o)):(t.push(q),k=t.length,h.waveEncoder=q,p.settings.sendToModules.push(k)),j=new SepiaFW.webAudio.Processor({onaudiostart:h.onAudioStart,onaudioend:h.onAudioEnd,onrelease:h.onProcessorRelease,onerror:h.onProcessorError,targetSampleRate:l,modules:t,destinationNode:void 0,startSuspended:!0,debugLog:h.onDebugLog,customSource:g},function(a){h.onProcessorReady(a)},function(a){h.onProcessorInitError(a)})}function e(a){j&&h.waveEncoder&&h.waveEncoder.handle.sendToModule({gate:a})}function f(){j&&h.waveEncoder&&h.waveEncoder.handle.sendToModule({request:{get:"wave"}})}function g(a){j&&h.sttServerModule&&h.sttServerModule.handle.sendToModule({gate:a})}var h={onProcessorReady:function(a){console.log("SepiaVoiceRecorder -  onProcessorReady",a)},onProcessorInitError:function(a){console.error("SepiaVoiceRecorder -  onProcessorInitError",a)},onConnected:function(a){console.log("SepiaVoiceRecorder -  onConnected",a)},onDisconnected:function(a){console.log("SepiaVoiceRecorder -  onDisconnected",a)},onAudioStart:function(){console.log("SepiaVoiceRecorder -  onAudioStart")},onAudioEnd:function(){console.log("SepiaVoiceRecorder -  onAudioEnd")},onProcessorError:function(a){console.error("SepiaVoiceRecorder -  onProcessorError",a)},onProcessorRelease:function(){console.log("SepiaVoiceRecorder -  onProcessorRelease")},onDebugLog:function(a){console.log("debugLog",a)},onResamplerData:function(a){console.log("SepiaVoiceRecorder -  onResamplerData",a)},onWaveEncoderStateChange:function(a){console.log("SepiaVoiceRecorder -  onWaveEncoderStateChange",a)},onWaveEncoderAudioData:function(a){console.log("SepiaVoiceRecorder -  onWaveEncoderAudioData",a)}},i=!1;h.onVadStateChange=function(a,b){console.log("SepiaVoiceRecorder -  onVadStateChange",a,b)},h.onSpeechRecognitionStateChange=function(a){console.log("SepiaVoiceRecorder -  onSpeechRecognitionStateChange",a)},h.onSpeechRecognitionEvent=function(a){console.log("SepiaVoiceRecorder -  onSpeechRecognitionEvent",a)};var j,k=!1,l=16e3,m=512;h.create=function(a){return j?void h.onProcessorInitError({name:"ProcessorInitError",message:"SepiaVoiceRecorder already exists. Release old one before creating new."}):void(!a&&(a={}),d(a))},h.isReady=function(){return!!j&&j.isInitialized()},h.isActive=function(){return!!j&&j.isInitialized()&&j.isProcessing()},h.start=function(a,b,c){j?j.start(function(){e("open"),g("open"),a&&a()},b,c):c&&c({name:"ProcessorInitError",message:"SepiaVoiceRecorder doesn't exist yet."})},h.stop=function(a,b,c){j?j.stop(function(b){e("close"),g("close"),a&&a(b)},b,c):b&&b()},h.release=function(a,b,c){j?j.release(function(){j=void 0,a&&a()},function(){j=void 0,b&&b()},function(a){j=void 0,c&&c(a)}):b&&b()},h.stopIfActive=function(a){h.isActive()?h.stop(a,a,void 0):a&&a()},h.stopAndReleaseIfActive=function(a){h.stopIfActive(function(){h.isReady()?h.release(a,a,void 0):(j=void 0,a&&a())})},h.decodeAudioFileToInt16Mono=function(a,b,c,d,e){b||(b=16e3),c&&1<c&&console.error("SepiaVoiceRecorder.decodeAudioFileToInt16Mono - Channels > 1 not supported. Result will only contain data of channel 0."),d||(d=console.log),e||(e=console.error),SepiaFW.webAudio.decodeAudioFileToInt16Mono(a,b,d,e)},h.addAudioElementToPage=function(a,b,c){return SepiaFW.webAudio.addAudioElementToPage(a,b,c)},window.SepiaVoiceRecorder=h})();